<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="BeehiveManagement.MainPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BeehiveManagement"
    xmlns:common="using:BeehiveManagement.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Behive Management System</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <StackPanel Grid.Row="1" Margin="20,0">
            <TextBlock Margin="0,40,0,20" Style="{StaticResource GroupHeaderTextStyle}"
                       Text="Worker Bee Assignments"/>
            <StackPanel Orientation="Horizontal">
                <StackPanel Margin="0,0,20,0">
                    <TextBlock Text="Job" Margin="0,10,0,20"
                               Style="{StaticResource BodyTextStyle}"/>
                    <ComboBox SelectedIndex="0">
                        <ComboBoxItem Content="Baby bee tutoring"/>
                        <ComboBoxItem Content="Egg care"/>
                        <ComboBoxItem Content="Hive maintenance"/>
                        <ComboBoxItem Content="Honey manufacturing"/>
                        <ComboBoxItem Content="Nectar collector"/>
                        <ComboBoxItem Content="Sting patrol"/>
                    </ComboBox>
                </StackPanel>
                <StackPanel Margin="0,0,20,0">
                    <TextBlock Text="Shifts" Margin="0,10,0,20"
                               Style="{StaticResource BodyTextStyle}"/>
                    <TextBox x:Name="shifts"/>
                </StackPanel>
                <Button Content="Assign this job to a bee" Style="{StaticResource TextButtonStyle}"/>
            </StackPanel>
            <Button Margin="20,0,0,0" Content="Work the next shift"/>

            <TextBlock Margin="0,40,0,20" Style="{StaticResource GroupHeaderTextStyle}"
                       Text="Shift Report"/>
            <ScrollViewer BorderBrush="White" BorderThickness="2" Height="250" 
                Content="
Report for shift #20&#13;
Worker #1 will be done with&#13;
Worker #2 finished the job">
            </ScrollViewer>
        </StackPanel>

        <!-- Page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" 
                    IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" 
                    Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" 
                       Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
